# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.32.1"

default_platform :ios

def fancy_sign(message, size=60, separator='=-')
  puts '\|||/'.center(size, ' ')
  puts '(o o)'.center(size, ' ')
  puts '-ooO-(_)-Ooo-'.center(size, '-')
  puts ''.center(size, separator)
  puts "~  #{message}  ~".center(size, separator)
  puts ''.center(size, separator)
  puts ''.center(size, '-')
end

platform :ios do

  before_all do
    # load variables from .env file in the root if it exists
    if File.exist?('../../.env')
      open('../../.env', 'r').readlines.each do |l|
        kv = l.split('=')
        ENV[kv[0]] = kv[1].chomp if kv[1]
      end
    end

    # cocoapods
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Playground for fastlane plugins"
  lane :play do
    # Nice!
    ascii_art(
      image_path: 'https://avatars1.githubusercontent.com/u/3902527?v=3&s=200',
      width: 60
    )

    # So pretty
    fancy_sign number_of_commits

    # Automatic Icon magic
    appicon(
      appicon_image_file: '../AppIcon/IconIOS.png',
      appicon_devices: [:ipad, :iphone, :ios_marketing],
      appicon_path: 'ChainReactApp/Images.xcassets'
    )

  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do

    # Print out the current logo ðŸŽ‰
    ascii_art(
      image_path: 'https://avatars1.githubusercontent.com/u/3902527?v=3&s=200',
      width: 60
    )

    # bump version number
    increment_build_number(
      xcodeproj: "./ChainReactApp.xcodeproj"
    )

    # Make sure latest artwork is in place
    appicon(
      appicon_image_file: '../AppIcon/IconIOS.png',
      appicon_devices: [:ipad, :iphone, :ios_marketing],
      appicon_path: 'ChainReactApp/Images.xcassets'
    )

    # match(type: "appstore") # more information: https://codesigning.guide
    gym(scheme: "ChainReactApp") # Build your app - more options available

    # Ship it!
    pilot(
      skip_waiting_for_build_processing: true
    )

    # upload this dSYM to mobilecenter
    mobile_center_upload(
      api_token: ENV['CR_MOBILE_CENTER_TOKEN'],
      owner_name: "gantman-1rtx",
      app_name: "Chain-React-01",
      upload_dsym_only: true,
      dsym: "./ChainReactApp.app.dSYM.zip"
    )

    # Give us a friendly high five
    # Jamon HATES this feature... commenting it out for his sanity
    # slack(
    #   message: "New Build: successfully released",
    #   channel: "#p-cr-conferenceapp"
    # )

  end

  desc "Upload the dSYM to Mobile Center"
  lane :dsym do
    # upload this dSYM to mobilecenter
    mobile_center_upload(
      api_token: ENV['CR_MOBILE_CENTER_TOKEN'],
      owner_name: "gantman-1rtx",
      app_name: "Chain-React",
      upload_dsym_only: true,
      dsym: "./ChainReactApp.app.dSYM.zip"
    )
  end


  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "ChainReactApp") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded.
# Learn more at https://github.com/fastlane/fastlane#metrics
